services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: cms-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CMS Microservice
  cms-microservice:
    build:
      context: .
      dockerfile: cmsmicroservice/Dockerfile
    container_name: cms-microservice
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres?currentSchema=cms_cmsMicroService
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy

  # Fraud Microservice
  fraud-microservice:
    build:
      context: .
      dockerfile: fraudmicroservice/Dockerfile
    container_name: fraud-microservice
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres?currentSchema=cms_fraudMicroService
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
