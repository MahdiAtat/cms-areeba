services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CMS Microservice
  cms-microservice:
    build:
      context: .
      dockerfile: cmsmicroservice/Dockerfile
    container_name: ${CMS_CONTAINER_NAME}
    ports:
      - "${CMS_SERVICE_PORT}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${CMS_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - SERVER_SERVLET_CONTEXT_PATH=${SERVER_SERVLET_CONTEXT_PATH}
      - CMS_AREBA_CRYPTO_PASSWORD=${CMS_AREBA_CRYPTO_PASSWORD}
      - CMS_AREBA_CRYPTO_SALT_HEX=${CMS_AREBA_CRYPTO_SALT_HEX}
      - FRAUD_URL=${FRAUD_URL}
    depends_on:
      postgres:
        condition: service_healthy

  # Fraud Microservice
  fraud-microservice:
    build:
      context: .
      dockerfile: fraudmicroservice/Dockerfile
    container_name: ${FRAUD_CONTAINER_NAME}
    ports:
      - "${FRAUD_SERVICE_PORT}:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${FRAUD_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - SERVER_SERVLET_CONTEXT_PATH=${FRAUD_SERVER_SERVLET_CONTEXT_PATH}
      - FRAUD_LIMIT=${FRAUD_LIMIT}
      - FRAUD_INTERVAL=${FRAUD_INTERVAL}
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
